{"ast":null,"code":"import _asyncToGenerator from \"D:/Local Repo/OrquestaJOSM/Orquesta-JOSM/JOsM/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { from, switchMap } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as Realm from \"realm-web\";\nimport * as i0 from \"@angular/core\";\nconst realmAppId = 'data-jynqh';\nexport let IntegrantesService = /*#__PURE__*/(() => {\n  class IntegrantesService {\n    constructor() {\n      this.app = new Realm.App({\n        id: realmAppId\n      });\n      // Immediately try to log in and store the resulting Observable\n      this.user$ = from(this.login());\n    }\n    login() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const credentials = Realm.Credentials.anonymous();\n        try {\n          return yield _this.app.logIn(credentials);\n        } catch (error) {\n          const e = error;\n          console.error(\"Error logging into Realm:\", e.message);\n          // Additional error handling as needed\n          throw e;\n        }\n      })();\n    }\n    // General method to call a Realm function, ensuring user is logged in first\n    callRealmFunction(functionName, args = []) {\n      return this.user$.pipe(switchMap(user => from(user.functions[functionName](...args))), catchError(error => {\n        console.error(`Error calling Realm function ${functionName}`, error);\n        throw error;\n      }));\n    }\n    // Define methods for each collection\n    obtenerDirectiva() {\n      return this.callRealmFunction('getDirectivas', []);\n    }\n    obtenerGaleria() {\n      return this.callRealmFunction('getGalerias', []);\n    }\n    obtenerMusicos() {\n      return this.callRealmFunction('getIntegrantes', []);\n    }\n    obtenerInfo() {\n      return this.callRealmFunction('getInfos', []);\n    }\n    obtenerEventos() {\n      return this.callRealmFunction('getEventos', []);\n    }\n    static #_ = this.ɵfac = function IntegrantesService_Factory(t) {\n      return new (t || IntegrantesService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: IntegrantesService,\n      factory: IntegrantesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return IntegrantesService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}