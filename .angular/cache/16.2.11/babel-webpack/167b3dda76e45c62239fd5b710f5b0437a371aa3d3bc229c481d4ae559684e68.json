{"ast":null,"code":"import _asyncToGenerator from \"D:/Local Repo/OrquestaJOSM/Orquesta-JOSM/JOsM/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as Realm from \"realm-web\";\nimport * as i0 from \"@angular/core\";\nexport class IntegrantesService {\n  constructor() {\n    this.user = null;\n    // Initialize the app\n    const APP_ID = 'your-realm-app-id'; // Replace with your Realm App ID\n    this.app = new Realm.App({\n      id: APP_ID\n    });\n    // Perform authentication\n    this.login();\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Using anonymous credentials for this example\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = yield _this.app.logIn(credentials);\n        // Save the logged in user\n        _this.user = user;\n      } catch (error) {\n        console.error(\"Error logging in to Realm\", error);\n      }\n    })();\n  }\n  // Function to call a Realm function and return an Observable\n  callRealmFunction(functionName, args) {\n    // Check if the user is authenticated\n    if (!this.user) {\n      throw new Error(\"Must be logged in to call Realm functions\");\n    }\n    // Call the Realm function and wrap the result in an Observable\n    return from(this.user.functions[functionName](...args)).pipe(catchError(error => {\n      console.error(`Error calling Realm function ${functionName}`, error);\n      throw error;\n    }));\n  }\n  // Define methods for each collection\n  obtenerDirectiva() {\n    return this.callRealmFunction('getDirectivas', []);\n  }\n  obtenerGaleria() {\n    return this.callRealmFunction('getGalerias', []);\n  }\n  obtenerMusicos() {\n    return this.callRealmFunction('getIntegrantes', []);\n  }\n  obtenerInfo() {\n    return this.callRealmFunction('getInfos', []);\n  }\n  obtenerEventos() {\n    return this.callRealmFunction('getEventos', []);\n  }\n  static #_ = this.ɵfac = function IntegrantesService_Factory(t) {\n    return new (t || IntegrantesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IntegrantesService,\n    factory: IntegrantesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["from","catchError","Realm","IntegrantesService","constructor","user","APP_ID","app","App","id","login","_this","_asyncToGenerator","credentials","Credentials","anonymous","logIn","error","console","callRealmFunction","functionName","args","Error","functions","pipe","obtenerDirectiva","obtenerGaleria","obtenerMusicos","obtenerInfo","obtenerEventos","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Local Repo\\OrquestaJOSM\\Orquesta-JOSM\\JOsM\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, from } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as Realm from \"realm-web\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IntegrantesService {\r\n  private app: Realm.App;\r\n  private user: Realm.User | null = null;\r\n\r\n  constructor() {\r\n    // Initialize the app\r\n    const APP_ID = 'your-realm-app-id'; // Replace with your Realm App ID\r\n    this.app = new Realm.App({ id: APP_ID });\r\n    // Perform authentication\r\n    this.login();\r\n  }\r\n\r\n  async login() {\r\n    // Using anonymous credentials for this example\r\n    const credentials = Realm.Credentials.anonymous();\r\n    try {\r\n      // Authenticate the user\r\n      const user = await this.app.logIn(credentials);\r\n      // Save the logged in user\r\n      this.user = user;\r\n    } catch (error) {\r\n      console.error(\"Error logging in to Realm\", error);\r\n    }\r\n  }\r\n\r\n  // Function to call a Realm function and return an Observable\r\n  private callRealmFunction(functionName: string, args: any[]): Observable<any[]> {\r\n    // Check if the user is authenticated\r\n    if (!this.user) {\r\n      throw new Error(\"Must be logged in to call Realm functions\");\r\n    }\r\n    // Call the Realm function and wrap the result in an Observable\r\n    return from(this.user.functions[functionName](...args)).pipe(\r\n      catchError(error => {\r\n        console.error(`Error calling Realm function ${functionName}`, error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Define methods for each collection\r\n  obtenerDirectiva(): Observable<any[]> {\r\n    return this.callRealmFunction('getDirectivas', []);\r\n  }\r\n\r\n  obtenerGaleria(): Observable<any[]> {\r\n    return this.callRealmFunction('getGalerias', []);\r\n  }\r\n\r\n  obtenerMusicos(): Observable<any[]> {\r\n    return this.callRealmFunction('getIntegrantes', []);\r\n  }\r\n\r\n  obtenerInfo(): Observable<any[]> {\r\n    return this.callRealmFunction('getInfos', []);\r\n  }\r\n\r\n  obtenerEventos(): Observable<any[]> {\r\n    return this.callRealmFunction('getEventos', []);\r\n  }\r\n}"],"mappings":";AAEA,SAAqBA,IAAI,QAAQ,MAAM;AACvC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAO,KAAKC,KAAK,MAAM,WAAW;;AAIlC,OAAM,MAAOC,kBAAkB;EAI7BC,YAAA;IAFQ,KAAAC,IAAI,GAAsB,IAAI;IAGpC;IACA,MAAMC,MAAM,GAAG,mBAAmB,CAAC,CAAC;IACpC,IAAI,CAACC,GAAG,GAAG,IAAIL,KAAK,CAACM,GAAG,CAAC;MAAEC,EAAE,EAAEH;IAAM,CAAE,CAAC;IACxC;IACA,IAAI,CAACI,KAAK,EAAE;EACd;EAEMA,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT;MACA,MAAMC,WAAW,GAAGX,KAAK,CAACY,WAAW,CAACC,SAAS,EAAE;MACjD,IAAI;QACF;QACA,MAAMV,IAAI,SAASM,KAAI,CAACJ,GAAG,CAACS,KAAK,CAACH,WAAW,CAAC;QAC9C;QACAF,KAAI,CAACN,IAAI,GAAGA,IAAI;OACjB,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;;IAClD;EACH;EAEA;EACQE,iBAAiBA,CAACC,YAAoB,EAAEC,IAAW;IACzD;IACA,IAAI,CAAC,IAAI,CAAChB,IAAI,EAAE;MACd,MAAM,IAAIiB,KAAK,CAAC,2CAA2C,CAAC;;IAE9D;IACA,OAAOtB,IAAI,CAAC,IAAI,CAACK,IAAI,CAACkB,SAAS,CAACH,YAAY,CAAC,CAAC,GAAGC,IAAI,CAAC,CAAC,CAACG,IAAI,CAC1DvB,UAAU,CAACgB,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gCAAgCG,YAAY,EAAE,EAAEH,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EAEA;EACAQ,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACN,iBAAiB,CAAC,eAAe,EAAE,EAAE,CAAC;EACpD;EAEAO,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACP,iBAAiB,CAAC,aAAa,EAAE,EAAE,CAAC;EAClD;EAEAQ,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACR,iBAAiB,CAAC,gBAAgB,EAAE,EAAE,CAAC;EACrD;EAEAS,WAAWA,CAAA;IACT,OAAO,IAAI,CAACT,iBAAiB,CAAC,UAAU,EAAE,EAAE,CAAC;EAC/C;EAEAU,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACV,iBAAiB,CAAC,YAAY,EAAE,EAAE,CAAC;EACjD;EAAC,QAAAW,CAAA,G;qBA3DU3B,kBAAkB;EAAA;EAAA,QAAA4B,EAAA,G;WAAlB5B,kBAAkB;IAAA6B,OAAA,EAAlB7B,kBAAkB,CAAA8B,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}